{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","goodOne","goodTwo","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","value","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EAvCD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAmBzB,OAjBAD,EAAaE,MAAK,SAACC,EAASC,GAC1B,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKb,EAASgB,OACZ,OAAOJ,EAAQK,OAASJ,EAAQI,OAElC,QACE,OAAO,MAITb,GACFK,EAAaS,UAGRT,EAgBcU,CAAkBlB,EAAiB,CACtDG,aACAG,aAGF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYf,IAAaP,EAASc,WAGtCS,QAAS,kBAAMf,EAAYR,EAASc,WARtC,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYf,IAAaP,EAASgB,SAGtCO,QAAS,kBAAMf,EAAYR,EAASgB,SARtC,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAA2B,IAAflB,IAGhBmB,QA9Cc,WACpBlB,GAAc,SAACmB,GAAD,OAAYA,MAqCtB,sBAcGpB,GAAcG,IAAaP,EAASM,OACnC,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA7DQ,WAClBlB,GAAc,GACdG,EAAYR,EAASM,OAwDb,sBAWN,6BAEIG,EAAagB,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCjIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fe2b5d31.chunk.js","sourcesContent":["import { useState } from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodOne, goodTwo) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodOne.localeCompare(goodTwo);\n\n      case SortType.LENGTH:\n        return goodOne.length - goodTwo.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const handleReverse = () => {\n    setIsReversed((value) => !value);\n  };\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, {\n    isReversed,\n    sortType,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': isReversed === false,\n            },\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {\n          (isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}